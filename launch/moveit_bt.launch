<launch>

    <!-- Specify the config files to use -->
    <rosparam ns="moveit_bt_node" command="load" file="$(find moveit_bt)/config/moveit_bt.yaml" />

    <!-- Planning Pipeline -->
    <include ns="/moveit_bt_node/ompl" file="$(find sr80_moveit_config)/launch/ompl_planning_pipeline.launch.xml"/>

     <!-- Trajectory execution  -->
    <include ns="moveit_bt_node" file="$(find sr80_moveit_config)/launch/trajectory_execution.launch.xml">
      <arg name="moveit_controller_manager" value="fake"/>
    </include>

    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find sr80_moveit_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- If needed, broadcast static tf for robot root -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world base_link" />

    <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">["/moveit_bt_node/fake_controller_joint_states"]</rosparam>
    </node>

    <!-- Start robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" args="-publish_frequency 10.0"/>

    <!-- Launch RViz -->
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
      args="-d $(find moveit_bt)/launch/moveit_bt.rviz" output="screen">
      <!--rosparam command="load" file="$(find sr80_moveit_config)/config/kinematics.yaml"/-->
    </node>

    <include file="$(find moveit_bt)/launch/moveit_bt_node.launch"/>

</launch>